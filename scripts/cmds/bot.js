const axios = require("axios");

const BOT_REPLIES = [
  "‡¶Ü‡¶Æ‡¶ø ‡¶è‡¶ñ‡¶® ‡¶ú‡ßü ‡¶¨‡¶∏ ‡¶è‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶¨‡¶ø‡¶ú‡¶ø ‡¶Ü‡¶õ‡¶ø üòé",
  "what are you asking me to do?",
  "I love you baby meye hole chipay aso üíã",
  "Love you 3000 üòçüíù",
  "ji bol‡ßá‡¶® ki korte pari ami apnar jonno?",
  "‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶®‡¶æ ‡¶°‡ßá‡¶ï‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶¨‡¶∏ ‡¶ú‡ßü‡¶ï‡ßá ‡¶°‡¶æ‡¶ï‡ßá‡¶®! üíª link: https://www.facebook.com/100001435123762",
  "Hmm jan ummahüòòüòò",
  "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶°‡¶æ‡¶ï‡¶≤‡ßá ‡¶¨‡¶®‡ßç‡¶ß‡ßÅ ü§ñ?",
  "‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏‡¶ø ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ü§ñ",
  "Hi, ü§ñ i can help you~~~~"
];

const API_CONFIG_URL = "https://raw.githubusercontent.com/JUBAED-AHMED-JOY/Joy/main/api.json";

module.exports = {
  config: {
    name: "bot",
    version: "7.0.0",
    author: "JOY",
    role: 0,
    category: "auto",
    prefix: false,
    shortDescription: "Bot, ‡¶¨‡¶ü, bby: random + API replies + Teach system",
  },

  onStart: async function () {
    console.log("‚úÖ 'bot' command loaded (random reply + reply-to-bot API + teach system active)");
  },

  // üîπ Teach System
  teach: async function (apiUrl, ask, ans) {
    try {
      const res = await axios.get(`${apiUrl}/sim`, {
        params: { teach: `${ask}|${ans}` }
      });
      return res.data;
    } catch (err) {
      console.error("‚ùå Teach Error:", err.message);
      return null;
    }
  },

  onChat: async function ({ api, event, message }) {
    try {
      const { body, messageReply } = event;
      if (!body) return;

      const text = body.trim().toLowerCase();
      const botID = await api.getCurrentUserID();
      const isReplyToBot = messageReply && messageReply.senderID === botID;

      // üîπ Load API base
      let API_BASE;
      try {
        const res = await axios.get(API_CONFIG_URL);
        API_BASE = res.data.api;
      } catch {
        API_BASE = null;
      }

      if (!API_BASE) return message.reply("‚ö†Ô∏è API link not found (GitHub JSON load failed)");

      // ======================
      // 1Ô∏è‚É£ Teach via reply
      // ======================
      if (messageReply && text.startsWith("teach ")) {
        const ask = text.slice(6).trim();
        const ans = messageReply.body?.trim();
        if (!ans) return message.reply("‚ùå Reply to a message to teach its content!");
        const result = await module.exports.teach(API_BASE, ask, ans);
        if (result?.success) return message.reply(`‚úÖ Teach Added!\nüí¨ ASK: ${ask}\nüí° ANS: ${ans}`);
        return message.reply(`‚ö†Ô∏è Teach failed! ${result?.error || ""}`);
      }

      // ======================
      // 2Ô∏è‚É£ Teach via direct command
      // ======================
      if (text.startsWith("teach ")) {
        const input = text.slice(6).trim();
        let ask, ans;
        if (input.includes("|")) [ask, ans] = input.split("|").map(x => x.trim());
        else if (input.includes("-")) [ask, ans] = input.split("-").map(x => x.trim());

        if (ask && ans) {
          const result = await module.exports.teach(API_BASE, ask, ans);
          if (result?.success) return message.reply(`‚úÖ Teach Added!\nüí¨ ASK: ${ask}\nüí° ANS: ${ans}`);
          return message.reply(`‚ö†Ô∏è Teach failed! ${result?.error || ""}`);
        }
      }

      // ======================
      // 3Ô∏è‚É£ Random reply if just "bot", "bby", "‡¶¨‡¶ü"
      // ======================
      if (["bot", "bby", "‡¶¨‡¶ü"].includes(text)) {
        const randomReply = BOT_REPLIES[Math.floor(Math.random() * BOT_REPLIES.length)];
        return message.reply(randomReply);
      }

      // ======================
      // 4Ô∏è‚É£ Bot API reply (normal question)
      // ======================
      if (isReplyToBot || text.startsWith("bot") || text.startsWith("bby") || text.startsWith("‡¶¨‡¶ü")) {
        const res = await axios.get(`${API_BASE}/sim?text=${encodeURIComponent(body)}`);
        const ans = res.data.answer || "Bot couldn't answer.";
        return message.reply(ans);
      }

    } catch (err) {
      console.error("‚ùå Chatbot Error:", err.message);
      return message.reply("‚ùå API Error: " + err.message);
    }
  }
};
